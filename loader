-- Executor UI Library (Rayfield-style minimal)
-- Designed for injection environment

local MyExecutorUI = {}

local icons = {
    ["add"] = "http://www.roblox.com/asset/?id=6035047377",
    ["remove"] = "http://www.roblox.com/asset/?id=6035067836",
    ["checkroom"] = "http://www.roblox.com/asset/?id=6035107931",
    ["sports_football"] = "http://www.roblox.com/asset/?id=6034227067",
    ["emoji_emotions"] = "http://www.roblox.com/asset/?id=6034275731",
    -- Add more icons here
}

local function create(className, properties)
    local obj = Instance.new(className)
    if properties then
        for prop, val in pairs(properties) do
            if prop == "Parent" then
                obj.Parent = val
            else
                obj[prop] = val
            end
        end
    end
    return obj
end

function MyExecutorUI:CreateWindow(title)
    local CoreGui = game:GetService("CoreGui")

    -- Avoid duplicates
    local existing = CoreGui:FindFirstChild("MyExecutorUI")
    if existing then
        existing:Destroy()
    end

    local ScreenGui = create("ScreenGui", {
        Name = "MyExecutorUI",
        Parent = CoreGui,
        ZIndexBehavior = Enum.ZIndexBehavior.Sibling,
    })

    local Frame = create("Frame", {
        Parent = ScreenGui,
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        Size = UDim2.new(0, 420, 0, 320),
        Position = UDim2.new(0.5, -210, 0.5, -160),
        BorderSizePixel = 0,
        ClipsDescendants = true,
    })

    local TitleLabel = create("TextLabel", {
        Parent = Frame,
        Text = title or "Executor UI",
        BackgroundTransparency = 1,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        Font = Enum.Font.GothamBold,
        TextSize = 24,
        Size = UDim2.new(1, 0, 0, 44),
        Position = UDim2.new(0, 0, 0, 0),
    })

    local ContentFrame = create("Frame", {
        Parent = Frame,
        BackgroundColor3 = Color3.fromRGB(40, 40, 40),
        Size = UDim2.new(1, 0, 1, -44),
        Position = UDim2.new(0, 0, 0, 44),
        BorderSizePixel = 0,
        ClipsDescendants = true,
    })

    local UIListLayout = create("UIListLayout", {
        Parent = ContentFrame,
        Padding = UDim.new(0, 8),
        SortOrder = Enum.SortOrder.LayoutOrder,
    })

    local window = {}

    function window:AddButton(text, iconName, callback)
        local button = create("TextButton", {
            Parent = ContentFrame,
            BackgroundColor3 = Color3.fromRGB(70, 70, 70),
            BorderSizePixel = 0,
            Text = text,
            TextColor3 = Color3.fromRGB(240, 240, 240),
            Font = Enum.Font.Gotham,
            TextSize = 18,
            Size = UDim2.new(1, -16, 0, 36),
            AutoButtonColor = true,
            LayoutOrder = #ContentFrame:GetChildren() + 1,
        })

        if iconName and icons[iconName] then
            local icon = create("ImageLabel", {
                Parent = button,
                Image = icons[iconName],
                BackgroundTransparency = 1,
                Size = UDim2.new(0, 24, 0, 24),
                Position = UDim2.new(0, 8, 0.5, -12),
            })
            button.TextXAlignment = Enum.TextXAlignment.Left
            button.Text = "  " .. text -- spacing for icon
        end

        if callback then
            button.MouseButton1Click:Connect(callback)
        end

        return button
    end

    function window:AddToggle(text, iconName, default, callback)
        local toggleFrame = create("Frame", {
            Parent = ContentFrame,
            BackgroundColor3 = Color3.fromRGB(70, 70, 70),
            Size = UDim2.new(1, -16, 0, 36),
            LayoutOrder = #ContentFrame:GetChildren() + 1,
        })

        local label = create("TextLabel", {
            Parent = toggleFrame,
            BackgroundTransparency = 1,
            Text = text,
            TextColor3 = Color3.fromRGB(240, 240, 240),
            Font = Enum.Font.Gotham,
            TextSize = 18,
            Size = UDim2.new(1, -44, 1, 0),
            Position = UDim2.new(0, 8, 0, 0),
            TextXAlignment = Enum.TextXAlignment.Left,
        })

        local toggleBtn = create("ImageButton", {
            Parent = toggleFrame,
            BackgroundColor3 = default and Color3.fromRGB(0, 170, 255) or Color3.fromRGB(110, 110, 110),
            Size = UDim2.new(0, 28, 0, 28),
            Position = UDim2.new(1, -36, 0.5, -14),
            AutoButtonColor = false,
        })

        if iconName and icons[iconName] then
            create("ImageLabel", {
                Parent = toggleBtn,
                Image = icons[iconName],
                BackgroundTransparency = 1,
                Size = UDim2.new(1, 0, 1, 0),
                Position = UDim2.new(0, 0, 0, 0),
            })
        end

        local toggled = default or false
        local function update()
            toggleBtn.BackgroundColor3 = toggled and Color3.fromRGB(0, 170, 255) or Color3.fromRGB(110, 110, 110)
        end

        toggleBtn.MouseButton1Click:Connect(function()
            toggled = not toggled
            update()
            if callback then
                callback(toggled)
            end
        end)

        update()

        return toggleFrame
    end

    function window:Destroy()
        ScreenGui:Destroy()
    end

    return window
end

return MyExecutorUI
