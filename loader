local RCS_UI = {}

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")

-- Main UI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "RCS_UI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = CoreGui

-- Drag Function
local function MakeDraggable(frame)
	local dragging, dragInput, startPos, startInputPos

	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			startPos = frame.Position
			startInputPos = input.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then dragging = false end
			end)
		end
	end)

	frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - startInputPos
			frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
end

-- Neon Glow UI Theme
local function Neonify(obj)
	local glow = Instance.new("UIStroke")
	glow.Thickness = 1.2
	glow.Color = Color3.fromRGB(0, 255, 150)
	glow.Transparency = 0.2
	glow.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	glow.Parent = obj
end

-- Create Window
function RCS_UI:CreateWindow(title)
	local Main = Instance.new("Frame")
	Main.Size = UDim2.new(0, 500, 0, 400)
	Main.Position = UDim2.new(0.5, -250, 0.5, -200)
	Main.AnchorPoint = Vector2.new(0.5, 0.5)
	Main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Main.BorderSizePixel = 0
	Main.Parent = ScreenGui

	local UICorner = Instance.new("UICorner", Main)
	UICorner.CornerRadius = UDim.new(0, 12)

	MakeDraggable(Main)
	Neonify(Main)

	local Title = Instance.new("TextLabel")
	Title.Size = UDim2.new(1, 0, 0, 40)
	Title.BackgroundTransparency = 1
	Title.Text = "üåê " .. title
	Title.Font = Enum.Font.GothamBold
	Title.TextSize = 20
	Title.TextColor3 = Color3.fromRGB(0, 255, 150)
	Title.Parent = Main

	local Container = Instance.new("Frame")
	Container.Size = UDim2.new(1, -20, 1, -60)
	Container.Position = UDim2.new(0, 10, 0, 50)
	Container.BackgroundTransparency = 1
	Container.Parent = Main

	local UIListLayout = Instance.new("UIListLayout", Container)
	UIListLayout.Padding = UDim.new(0, 12)
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

	local function CreateButton(text, callback)
		local Btn = Instance.new("TextButton")
		Btn.Size = UDim2.new(1, 0, 0, 36)
		Btn.Text = text
		Btn.Font = Enum.Font.Gotham
		Btn.TextSize = 16
		Btn.TextColor3 = Color3.fromRGB(255, 255, 255)
		Btn.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		Btn.AutoButtonColor = false
		Btn.Parent = Container
		Instance.new("UICorner", Btn).CornerRadius = UDim.new(0, 6)
		Neonify(Btn)

		Btn.MouseEnter:Connect(function()
			TweenService:Create(Btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(45, 45, 45)}):Play()
		end)
		Btn.MouseLeave:Connect(function()
			TweenService:Create(Btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(35, 35, 35)}):Play()
		end)
		Btn.MouseButton1Click:Connect(callback)
	end

	local function CreateToggle(text, default, callback)
		local ToggleFrame = Instance.new("Frame")
		ToggleFrame.Size = UDim2.new(1, 0, 0, 36)
		ToggleFrame.BackgroundTransparency = 1
		ToggleFrame.Parent = Container

		local Btn = Instance.new("TextButton")
		Btn.Size = UDim2.new(0.85, 0, 1, 0)
		Btn.Text = text
		Btn.Font = Enum.Font.Gotham
		Btn.TextSize = 16
		Btn.TextColor3 = Color3.fromRGB(255, 255, 255)
		Btn.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		Btn.AutoButtonColor = false
		Btn.Parent = ToggleFrame
		Instance.new("UICorner", Btn).CornerRadius = UDim.new(0, 6)
		Neonify(Btn)

		local Status = Instance.new("Frame")
		Status.Size = UDim2.new(0.1, 0, 0.6, 0)
		Status.Position = UDim2.new(0.9, 0, 0.2, 0)
		Status.BackgroundColor3 = default and Color3.fromRGB(0, 255, 150) or Color3.fromRGB(100, 100, 100)
		Status.Parent = ToggleFrame
		Instance.new("UICorner", Status).CornerRadius = UDim.new(0, 6)

		local toggled = default
		Btn.MouseButton1Click:Connect(function()
			toggled = not toggled
			Status.BackgroundColor3 = toggled and Color3.fromRGB(0, 255, 150) or Color3.fromRGB(100, 100, 100)
			callback(toggled)
		end)
	end

	local function CreateSlider(label, min, max, default, callback)
		local SliderFrame = Instance.new("Frame")
		SliderFrame.Size = UDim2.new(1, 0, 0, 36)
		SliderFrame.BackgroundTransparency = 1
		SliderFrame.Parent = Container

		local Label = Instance.new("TextLabel")
		Label.Size = UDim2.new(0.3, 0, 1, 0)
		Label.Text = label
		Label.Font = Enum.Font.Gotham
		Label.TextSize = 16
		Label.TextColor3 = Color3.fromRGB(255, 255, 255)
		Label.BackgroundTransparency = 1
		Label.Parent = SliderFrame

		local Bar = Instance.new("Frame")
		Bar.Size = UDim2.new(0.65, 0, 0.5, 0)
		Bar.Position = UDim2.new(0.35, 0, 0.25, 0)
		Bar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		Bar.Parent = SliderFrame
		Instance.new("UICorner", Bar).CornerRadius = UDim.new(0, 4)

		local Fill = Instance.new("Frame")
		Fill.Size = UDim2.new((default - min)/(max - min), 0, 1, 0)
		Fill.BackgroundColor3 = Color3.fromRGB(0, 255, 150)
		Fill.Parent = Bar
		Instance.new("UICorner", Fill).CornerRadius = UDim.new(0, 4)

		local dragging = false
		Bar.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = true end
		end)
		UserInputService.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end
		end)
		UserInputService.InputChanged:Connect(function(input)
			if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
				local rel = math.clamp((input.Position.X - Bar.AbsolutePosition.X) / Bar.AbsoluteSize.X, 0, 1)
				Fill.Size = UDim2.new(rel, 0, 1, 0)
				local value = math.floor(min + (max - min) * rel)
				callback(value)
			end
		end)
	end

	-- Return Control APIs
	return {
		Button = CreateButton,
		Toggle = CreateToggle,
		Slider = CreateSlider
	}
end

return RCS_UI
